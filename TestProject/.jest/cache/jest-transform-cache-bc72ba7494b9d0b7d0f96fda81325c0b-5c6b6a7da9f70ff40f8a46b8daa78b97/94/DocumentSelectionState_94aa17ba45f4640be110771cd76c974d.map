{"version":3,"sources":["DocumentSelectionState.js"],"names":["mixInEventEmitter","require","DocumentSelectionState","anchor","focus","_anchorOffset","_focusOffset","_hasFocus","emit","maxLength","update","Math","min","max","start","end","hasFocus","getStartOffset","getEndOffset","module","exports"],"mappings":"AAUA,a,+oBAEA,GAAIA,mBAAoBC,OAApB,qBAAJ,C,GAWMC,uB,YAKJ,gCAAYC,MAAZ,CAAoBC,KAApB,CAA2B,8CACzB,KAAKC,aAAL,CAAqBF,MAArB,CACA,KAAKG,YAAL,CAAoBF,KAApB,CACA,KAAKG,SAAL,CAAiB,KAAjB,CACD,C,yEASMJ,M,CAAQC,K,CAAO,CACpB,GAAI,KAAKC,aAAL,GAAuBF,MAAvB,EAAiC,KAAKG,YAAL,GAAsBF,KAA3D,CAAkE,CAChE,KAAKC,aAAL,CAAqBF,MAArB,CACA,KAAKG,YAAL,CAAoBF,KAApB,CACA,KAAKI,IAAL,CAAU,QAAV,EACD,CACF,C,wDAQeC,S,CAAW,CACzB,KAAKC,MAAL,CACEC,KAAKC,GAAL,CAAS,KAAKP,aAAd,CAA6BI,SAA7B,CADF,CAEEE,KAAKC,GAAL,CAAS,KAAKN,YAAd,CAA4BG,SAA5B,CAFF,EAID,C,qCAEO,CACN,GAAI,CAAC,KAAKF,SAAV,CAAqB,CACnB,KAAKA,SAAL,CAAiB,IAAjB,CACA,KAAKC,IAAL,CAAU,OAAV,EACD,CACF,C,mCAEM,CACL,GAAI,KAAKD,SAAT,CAAoB,CAClB,KAAKA,SAAL,CAAiB,KAAjB,CACA,KAAKC,IAAL,CAAU,MAAV,EACD,CACF,C,2CAKU,CACT,MAAO,MAAKD,SAAZ,CACD,C,iDAKa,CACZ,MAAO,MAAKF,aAAL,GAAuB,KAAKC,YAAnC,CACD,C,+CAKY,CACX,MAAO,MAAKD,aAAL,CAAqB,KAAKC,YAAjC,CACD,C,yDAKiB,CAChB,MAAO,MAAKC,SAAL,CAAiB,KAAKF,aAAtB,CAAsC,IAA7C,CACD,C,uDAKgB,CACf,MAAO,MAAKE,SAAL,CAAiB,KAAKD,YAAtB,CAAqC,IAA5C,CACD,C,uDAKgB,CACf,MACE,MAAKC,SAAL,CAAiBI,KAAKC,GAAL,CAAS,KAAKP,aAAd,CAA6B,KAAKC,YAAlC,CAAjB,CAAmE,IADrE,CAGD,C,mDAKc,CACb,MACE,MAAKC,SAAL,CAAiBI,KAAKE,GAAL,CAAS,KAAKR,aAAd,CAA6B,KAAKC,YAAlC,CAAjB,CAAmE,IADrE,CAGD,C,0CAOQQ,K,CAAOC,G,CAAK,CACnB,MACE,MAAKC,QAAL,IACA,KAAKC,cAAL,IAAyBF,GADzB,EACgCD,OAAS,KAAKI,YAAL,EAF3C,CAID,C,sCAGHlB,kBAAkBE,sBAAlB,CAA0C,CACxC,OAAQ,IADgC,CAExC,QAAS,IAF+B,CAGxC,SAAU,IAH8B,CAA1C,EAMAiB,OAAOC,OAAP,CAAiBlB,sBAAjB","file":"DocumentSelectionState.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule DocumentSelectionState\n * @typechecks\n */\n\n'use strict';\n\nvar mixInEventEmitter = require('mixInEventEmitter');\n\n/**\n * DocumentSelectionState is responsible for maintaining selection information\n * for a document.\n *\n * It is intended for use by AbstractTextEditor-based components for\n * identifying the appropriate start/end positions to modify the\n * DocumentContent, and for programmatically setting browser selection when\n * components re-render.\n */\nclass DocumentSelectionState {\n  /**\n   * @param {number} anchor\n   * @param {number} focus\n   */\n  constructor(anchor, focus) {\n    this._anchorOffset = anchor;\n    this._focusOffset = focus;\n    this._hasFocus = false;\n  }\n\n  /**\n   * Apply an update to the state. If either offset value has changed,\n   * set the values and emit the `change` event. Otherwise no-op.\n   *\n   * @param {number} anchor\n   * @param {number} focus\n   */\n  update(anchor, focus) {\n    if (this._anchorOffset !== anchor || this._focusOffset !== focus) {\n      this._anchorOffset = anchor;\n      this._focusOffset = focus;\n      this.emit('update');\n    }\n  }\n\n  /**\n   * Given a max text length, constrain our selection offsets to ensure\n   * that the selection remains strictly within the text range.\n   *\n   * @param {number} maxLength\n   */\n  constrainLength(maxLength) {\n    this.update(\n      Math.min(this._anchorOffset, maxLength),\n      Math.min(this._focusOffset, maxLength)\n    );\n  }\n\n  focus() {\n    if (!this._hasFocus) {\n      this._hasFocus = true;\n      this.emit('focus');\n    }\n  }\n\n  blur() {\n    if (this._hasFocus) {\n      this._hasFocus = false;\n      this.emit('blur');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasFocus() {\n    return this._hasFocus;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCollapsed() {\n    return this._anchorOffset === this._focusOffset;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isBackward() {\n    return this._anchorOffset > this._focusOffset;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getAnchorOffset() {\n    return this._hasFocus ? this._anchorOffset : null;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getFocusOffset() {\n    return this._hasFocus ? this._focusOffset : null;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getStartOffset() {\n    return (\n      this._hasFocus ? Math.min(this._anchorOffset, this._focusOffset) : null\n    );\n  }\n\n  /**\n   * @return {?number}\n   */\n  getEndOffset() {\n    return (\n      this._hasFocus ? Math.max(this._anchorOffset, this._focusOffset) : null\n    );\n  }\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   * @return {boolean}\n   */\n  overlaps(start, end) {\n    return (\n      this.hasFocus() &&\n      this.getStartOffset() <= end && start <= this.getEndOffset()\n    );\n  }\n}\n\nmixInEventEmitter(DocumentSelectionState, {\n  'blur': true,\n  'focus': true,\n  'update': true\n});\n\nmodule.exports = DocumentSelectionState;\n"]}