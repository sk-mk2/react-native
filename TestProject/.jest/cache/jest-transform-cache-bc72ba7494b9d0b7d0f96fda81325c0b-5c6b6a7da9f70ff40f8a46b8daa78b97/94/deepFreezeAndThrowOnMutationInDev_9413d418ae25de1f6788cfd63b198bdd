29724658bdafb1dfa4f4e1e3158c64f9
'use strict';function deepFreezeAndThrowOnMutationInDev(object){if(__DEV__){if(typeof object!=='object'||object===null||Object.isFrozen(object)||Object.isSealed(object)){return object;}var keys=Object.keys(object);for(var i=0;i<keys.length;i++){var key=keys[i];if(object.hasOwnProperty(key)){object.__defineGetter__(key,identity.bind(null,object[key]));object.__defineSetter__(key,throwOnImmutableMutation.bind(null,key));}}Object.freeze(object);Object.seal(object);for(var i=0;i<keys.length;i++){var key=keys[i];if(object.hasOwnProperty(key)){deepFreezeAndThrowOnMutationInDev(object[key]);}}}return object;}function throwOnImmutableMutation(key,value){throw Error('You attempted to set the key `'+key+'` with the value `'+JSON.stringify(value)+'` on an object that is meant to be immutable '+'and has been frozen.');}function identity(value){return value;}module.exports=deepFreezeAndThrowOnMutationInDev;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlZXBGcmVlemVBbmRUaHJvd09uTXV0YXRpb25JbkRldi5qcyJdLCJuYW1lcyI6WyJkZWVwRnJlZXplQW5kVGhyb3dPbk11dGF0aW9uSW5EZXYiLCJvYmplY3QiLCJfX0RFVl9fIiwiT2JqZWN0IiwiaXNGcm96ZW4iLCJpc1NlYWxlZCIsImtleXMiLCJpIiwibGVuZ3RoIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJfX2RlZmluZUdldHRlcl9fIiwiaWRlbnRpdHkiLCJiaW5kIiwiX19kZWZpbmVTZXR0ZXJfXyIsInRocm93T25JbW11dGFibGVNdXRhdGlvbiIsImZyZWV6ZSIsInNlYWwiLCJ2YWx1ZSIsIkVycm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVVBLGFBbUJBLFFBQVNBLGtDQUFULENBQXNEQyxNQUF0RCxDQUFvRSxDQUNsRSxHQUFJQyxPQUFKLENBQWEsQ0FDWCxHQUFJLE1BQU9ELE9BQVAsR0FBa0IsUUFBbEIsRUFDQUEsU0FBVyxJQURYLEVBRUFFLE9BQU9DLFFBQVAsQ0FBZ0JILE1BQWhCLENBRkEsRUFHQUUsT0FBT0UsUUFBUCxDQUFnQkosTUFBaEIsQ0FISixDQUc2QixDQUMzQixNQUFPQSxPQUFQLENBQ0QsQ0FFRCxHQUFJSyxNQUFPSCxPQUFPRyxJQUFQLENBQVlMLE1BQVosQ0FBWCxDQUVBLElBQUssR0FBSU0sR0FBSSxDQUFiLENBQWdCQSxFQUFJRCxLQUFLRSxNQUF6QixDQUFpQ0QsR0FBakMsQ0FBc0MsQ0FDcEMsR0FBSUUsS0FBTUgsS0FBS0MsQ0FBTCxDQUFWLENBQ0EsR0FBSU4sT0FBT1MsY0FBUCxDQUFzQkQsR0FBdEIsQ0FBSixDQUFnQyxDQUM5QlIsT0FBT1UsZ0JBQVAsQ0FBd0JGLEdBQXhCLENBQTZCRyxTQUFTQyxJQUFULENBQWMsSUFBZCxDQUFvQlosT0FBT1EsR0FBUCxDQUFwQixDQUE3QixFQUNBUixPQUFPYSxnQkFBUCxDQUF3QkwsR0FBeEIsQ0FBNkJNLHlCQUF5QkYsSUFBekIsQ0FBOEIsSUFBOUIsQ0FBb0NKLEdBQXBDLENBQTdCLEVBQ0QsQ0FDRixDQUVETixPQUFPYSxNQUFQLENBQWNmLE1BQWQsRUFDQUUsT0FBT2MsSUFBUCxDQUFZaEIsTUFBWixFQUVBLElBQUssR0FBSU0sR0FBSSxDQUFiLENBQWdCQSxFQUFJRCxLQUFLRSxNQUF6QixDQUFpQ0QsR0FBakMsQ0FBc0MsQ0FDcEMsR0FBSUUsS0FBTUgsS0FBS0MsQ0FBTCxDQUFWLENBQ0EsR0FBSU4sT0FBT1MsY0FBUCxDQUFzQkQsR0FBdEIsQ0FBSixDQUFnQyxDQUM5QlQsa0NBQWtDQyxPQUFPUSxHQUFQLENBQWxDLEVBQ0QsQ0FDRixDQUNGLENBQ0QsTUFBT1IsT0FBUCxDQUNELENBRUQsUUFBU2MseUJBQVQsQ0FBa0NOLEdBQWxDLENBQXVDUyxLQUF2QyxDQUE4QyxDQUM1QyxLQUFNQyxPQUNKLGlDQUFtQ1YsR0FBbkMsQ0FBeUMsb0JBQXpDLENBQ0FXLEtBQUtDLFNBQUwsQ0FBZUgsS0FBZixDQURBLENBQ3dCLCtDQUR4QixDQUVBLHNCQUhJLENBQU4sQ0FLRCxDQUVELFFBQVNOLFNBQVQsQ0FBa0JNLEtBQWxCLENBQXlCLENBQ3ZCLE1BQU9BLE1BQVAsQ0FDRCxDQUVESSxPQUFPQyxPQUFQLENBQWlCdkIsaUNBQWpCIiwiZmlsZSI6ImRlZXBGcmVlemVBbmRUaHJvd09uTXV0YXRpb25JbkRldi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIGRlZXBGcmVlemVBbmRUaHJvd09uTXV0YXRpb25JbkRldlxuICogQGZsb3dcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogSWYgeW91ciBhcHBsaWNhdGlvbiBpcyBhY2NlcHRpbmcgZGlmZmVyZW50IHZhbHVlcyBmb3IgdGhlIHNhbWUgZmllbGQgb3ZlclxuICogdGltZSBhbmQgaXMgZG9pbmcgYSBkaWZmIG9uIHRoZW0sIHlvdSBjYW4gZWl0aGVyICgxKSBjcmVhdGUgYSBjb3B5IG9yXG4gKiAoMikgZW5zdXJlIHRoYXQgdGhvc2UgdmFsdWVzIGFyZSBub3QgbXV0YXRlZCBiZWhpbmQgdHdvIHBhc3Nlcy5cbiAqIFRoaXMgZnVuY3Rpb24gaGVscHMgeW91IHdpdGggKDIpIGJ5IGZyZWV6aW5nIHRoZSBvYmplY3QgYW5kIHRocm93aW5nIGlmXG4gKiB0aGUgdXNlciBzdWJzZXF1ZW50bHkgbW9kaWZpZXMgdGhlIHZhbHVlLlxuICpcbiAqIFRoZXJlIGFyZSB0d28gY2F2ZWF0cyB3aXRoIHRoaXMgZnVuY3Rpb246XG4gKiAgIC0gSWYgdGhlIGNhbGwgc2l0ZSBpcyBub3QgaW4gc3RyaWN0IG1vZGUsIGl0IHdpbGwgb25seSB0aHJvdyB3aGVuXG4gKiAgICAgbXV0YXRpbmcgZXhpc3RpbmcgZmllbGRzLCBhZGRpbmcgYSBuZXcgb25lXG4gKiAgICAgd2lsbCB1bmZvcnR1bmF0ZWx5IGZhaWwgc2lsZW50bHkgOihcbiAqICAgLSBJZiB0aGUgb2JqZWN0IGlzIGFscmVhZHkgZnJvemVuIG9yIHNlYWxlZCwgaXQgd2lsbCBub3QgY29udGludWUgdGhlXG4gKiAgICAgZGVlcCB0cmF2ZXJzYWwgYW5kIHdpbGwgbGVhdmUgbGVhZiBub2RlcyB1bmZyb3plbi5cbiAqXG4gKiBGcmVlemluZyB0aGUgb2JqZWN0IGFuZCBhZGRpbmcgdGhlIHRocm93IG1lY2hhbmlzbSBpcyBleHBlbnNpdmUgYW5kIHdpbGxcbiAqIG9ubHkgYmUgdXNlZCBpbiBERVYuXG4gKi9cbmZ1bmN0aW9uIGRlZXBGcmVlemVBbmRUaHJvd09uTXV0YXRpb25JbkRldjxUOiBPYmplY3Q+KG9iamVjdDogVCk6IFQge1xuICBpZiAoX19ERVZfXykge1xuICAgIGlmICh0eXBlb2Ygb2JqZWN0ICE9PSAnb2JqZWN0JyB8fFxuICAgICAgICBvYmplY3QgPT09IG51bGwgfHxcbiAgICAgICAgT2JqZWN0LmlzRnJvemVuKG9iamVjdCkgfHxcbiAgICAgICAgT2JqZWN0LmlzU2VhbGVkKG9iamVjdCkpIHtcbiAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChvYmplY3QuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICBvYmplY3QuX19kZWZpbmVHZXR0ZXJfXyhrZXksIGlkZW50aXR5LmJpbmQobnVsbCwgb2JqZWN0W2tleV0pKTtcbiAgICAgICAgb2JqZWN0Ll9fZGVmaW5lU2V0dGVyX18oa2V5LCB0aHJvd09uSW1tdXRhYmxlTXV0YXRpb24uYmluZChudWxsLCBrZXkpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBPYmplY3QuZnJlZXplKG9iamVjdCk7XG4gICAgT2JqZWN0LnNlYWwob2JqZWN0KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICBpZiAob2JqZWN0Lmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgZGVlcEZyZWV6ZUFuZFRocm93T25NdXRhdGlvbkluRGV2KG9iamVjdFtrZXldKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIG9iamVjdDtcbn1cblxuZnVuY3Rpb24gdGhyb3dPbkltbXV0YWJsZU11dGF0aW9uKGtleSwgdmFsdWUpIHtcbiAgdGhyb3cgRXJyb3IoXG4gICAgJ1lvdSBhdHRlbXB0ZWQgdG8gc2V0IHRoZSBrZXkgYCcgKyBrZXkgKyAnYCB3aXRoIHRoZSB2YWx1ZSBgJyArXG4gICAgSlNPTi5zdHJpbmdpZnkodmFsdWUpICsgJ2Agb24gYW4gb2JqZWN0IHRoYXQgaXMgbWVhbnQgdG8gYmUgaW1tdXRhYmxlICcgK1xuICAgICdhbmQgaGFzIGJlZW4gZnJvemVuLidcbiAgKTtcbn1cblxuZnVuY3Rpb24gaWRlbnRpdHkodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZXBGcmVlemVBbmRUaHJvd09uTXV0YXRpb25JbkRldjtcbiJdfQ==