{"version":3,"sources":["TextPropTypes.js"],"names":["ColorPropType","require","EdgeInsetsPropType","PropTypes","StyleSheetPropType","TextStylePropTypes","stylePropType","module","exports","ellipsizeMode","oneOf","numberOfLines","number","textBreakStrategy","onLayout","func","onPress","onLongPress","pressRetentionOffset","selectable","bool","selectionColor","suppressHighlighting","style","testID","string","nativeID","allowFontScaling","accessible","adjustsFontSizeToFit","minimumFontScale","disabled"],"mappings":"AAWA,aAEA,GAAMA,eAAgBC,OAAhB,iBAAN,CACA,GAAMC,oBAAqBD,OAArB,sBAAN,CACA,GAAME,WAAYF,OAAZ,cAAN,CACA,GAAMG,oBAAqBH,OAArB,sBAAN,CACA,GAAMI,oBAAqBJ,OAArB,sBAAN,CAEA,GAAMK,eAAgBF,mBAAmBC,kBAAnB,CAAtB,CAEAE,OAAOC,OAAP,CAAiB,CAOfC,cAAeN,UAAUO,KAAV,CAAgB,CAAC,MAAD,CAAS,QAAT,CAAmB,MAAnB,CAA2B,MAA3B,CAAhB,CAPA,CAafC,cAAeR,UAAUS,MAbV,CAmBfC,kBAAmBV,UAAUO,KAAV,CAAgB,CAAC,QAAD,CAAW,aAAX,CAA0B,UAA1B,CAAhB,CAnBJ,CAyBfI,SAAUX,UAAUY,IAzBL,CA+BfC,QAASb,UAAUY,IA/BJ,CAqCfE,YAAad,UAAUY,IArCR,CA4CfG,qBAAsBhB,kBA5CP,CAkDfiB,WAAYhB,UAAUiB,IAlDP,CAwDfC,eAAgBrB,aAxDD,CA8DfsB,qBAAsBnB,UAAUiB,IA9DjB,CA+DfG,MAAOjB,aA/DQ,CAqEfkB,OAAQrB,UAAUsB,MArEH,CA2EfC,SAAUvB,UAAUsB,MA3EL,CAiFfE,iBAAkBxB,UAAUiB,IAjFb,CAuFfQ,WAAYzB,UAAUiB,IAvFP,CA6FfS,qBAAsB1B,UAAUiB,IA7FjB,CAmGfU,iBAAkB3B,UAAUS,MAnGb,CAyGfmB,SAAU5B,UAAUiB,IAzGL,CAAjB","file":"TextPropTypes.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule TextPropTypes\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst EdgeInsetsPropType = require('EdgeInsetsPropType');\nconst PropTypes = require('prop-types');\nconst StyleSheetPropType = require('StyleSheetPropType');\nconst TextStylePropTypes = require('TextStylePropTypes');\n\nconst stylePropType = StyleSheetPropType(TextStylePropTypes);\n\nmodule.exports = {\n  /**\n   * When `numberOfLines` is set, this prop defines how text will be\n   * truncated.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#ellipsizemode\n   */\n  ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),\n  /**\n   * Used to truncate the text with an ellipsis.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#numberoflines\n   */\n  numberOfLines: PropTypes.number,\n  /**\n   * Set text break strategy on Android.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#textbreakstrategy\n   */\n  textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),\n  /**\n   * Invoked on mount and layout changes.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#onlayout\n   */\n  onLayout: PropTypes.func,\n  /**\n   * This function is called on press.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#onpress\n   */\n  onPress: PropTypes.func,\n  /**\n   * This function is called on long press.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#onlongpress\n   */\n  onLongPress: PropTypes.func,\n  /**\n   * Defines how far your touch may move off of the button, before\n   * deactivating the button.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#pressretentionoffset\n   */\n  pressRetentionOffset: EdgeInsetsPropType,\n  /**\n   * Lets the user select text.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#selectable\n   */\n  selectable: PropTypes.bool,\n  /**\n   * The highlight color of the text.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#selectioncolor\n   */\n  selectionColor: ColorPropType,\n  /**\n   * When `true`, no visual change is made when text is pressed down.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#supperhighlighting\n   */\n  suppressHighlighting: PropTypes.bool,\n  style: stylePropType,\n  /**\n   * Used to locate this view in end-to-end tests.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#testid\n   */\n  testID: PropTypes.string,\n  /**\n   * Used to locate this view from native code.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#nativeid\n   */\n  nativeID: PropTypes.string,\n  /**\n   * Whether fonts should scale to respect Text Size accessibility settings.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#allowfontscaling\n   */\n  allowFontScaling: PropTypes.bool,\n  /**\n   * Indicates whether the view is an accessibility element.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#accessible\n   */\n  accessible: PropTypes.bool,\n  /**\n   * Whether font should be scaled down automatically.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#adjustsfontsizetofit\n   */\n  adjustsFontSizeToFit: PropTypes.bool,\n  /**\n   * Smallest possible scale a font can reach.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#minimumfontscale\n   */\n  minimumFontScale: PropTypes.number,\n  /**\n   * Specifies the disabled state of the text view for testing purposes.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#disabled\n   */\n  disabled: PropTypes.bool,\n};\n"]}