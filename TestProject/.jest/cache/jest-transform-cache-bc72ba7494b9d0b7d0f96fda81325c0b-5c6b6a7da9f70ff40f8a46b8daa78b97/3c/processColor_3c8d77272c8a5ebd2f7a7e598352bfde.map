{"version":3,"sources":["processColor.js"],"names":["Platform","require","normalizeColor","processColor","color","undefined","int32Color","OS","module","exports"],"mappings":"AASA,aAEA,GAAMA,UAAWC,OAAX,YAAN,CAEA,GAAMC,gBAAiBD,OAAjB,kBAAN,CAGA,QAASE,aAAT,CAAsBC,KAAtB,CAAwD,CACtD,GAAIA,QAAUC,SAAV,EAAuBD,QAAU,IAArC,CAA2C,CACzC,MAAOA,MAAP,CACD,CAED,GAAIE,YAAaJ,eAAeE,KAAf,CAAjB,CACA,GAAIE,aAAe,IAAf,EAAuBA,aAAeD,SAA1C,CAAqD,CACnD,MAAOA,UAAP,CACD,CAGDC,WAAa,CAACA,YAAc,EAAd,CAAmBA,aAAe,CAAnC,IAA0C,CAAvD,CAEA,GAAIN,SAASO,EAAT,GAAgB,SAApB,CAA+B,CAK7BD,WAAaA,WAAa,GAA1B,CACD,CACD,MAAOA,WAAP,CACD,CAEDE,OAAOC,OAAP,CAAiBN,YAAjB","file":"processColor.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule processColor\n * @flow\n */\n'use strict';\n\nconst Platform = require('Platform');\n\nconst normalizeColor = require('normalizeColor');\n\n/* eslint no-bitwise: 0 */\nfunction processColor(color?: string | number): ?number {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  let int32Color = normalizeColor(color);\n  if (int32Color === null || int32Color === undefined) {\n    return undefined;\n  }\n\n  // Converts 0xrrggbbaa into 0xaarrggbb\n  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;\n\n  if (Platform.OS === 'android') {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    int32Color = int32Color | 0x0;\n  }\n  return int32Color;\n}\n\nmodule.exports = processColor;\n"]}