{"version":3,"sources":["deepDiffer.js"],"names":["deepDiffer","one","two","constructor","Array","isArray","len","length","ii","key","twoKey","undefined","module","exports"],"mappings":"AASA,aAKA,GAAIA,YAAa,QAAbA,WAAa,CAASC,GAAT,CAAmBC,GAAnB,CAAmC,CAClD,GAAID,MAAQC,GAAZ,CAAiB,CAEf,MAAO,MAAP,CACD,CACD,GAAK,MAAOD,IAAP,GAAe,UAAhB,EAAgC,MAAOC,IAAP,GAAe,UAAnD,CAAgE,CAE9D,MAAO,MAAP,CACD,CACD,GAAK,MAAOD,IAAP,GAAe,QAAhB,EAA8BA,MAAQ,IAA1C,CAAiD,CAE/C,MAAOA,OAAQC,GAAf,CACD,CACD,GAAK,MAAOA,IAAP,GAAe,QAAhB,EAA8BA,MAAQ,IAA1C,CAAiD,CAG/C,MAAO,KAAP,CACD,CACD,GAAID,IAAIE,WAAJ,GAAoBD,IAAIC,WAA5B,CAAyC,CACvC,MAAO,KAAP,CACD,CACD,GAAIC,MAAMC,OAAN,CAAcJ,GAAd,CAAJ,CAAwB,CAEtB,GAAIK,KAAML,IAAIM,MAAd,CACA,GAAIL,IAAIK,MAAJ,GAAeD,GAAnB,CAAwB,CACtB,MAAO,KAAP,CACD,CACD,IAAK,GAAIE,IAAK,CAAd,CAAiBA,GAAKF,GAAtB,CAA2BE,IAA3B,CAAiC,CAC/B,GAAIR,WAAWC,IAAIO,EAAJ,CAAX,CAAoBN,IAAIM,EAAJ,CAApB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACF,CACF,CAXD,IAWO,CACL,IAAK,GAAIC,IAAT,GAAgBR,IAAhB,CAAqB,CACnB,GAAID,WAAWC,IAAIQ,GAAJ,CAAX,CAAqBP,IAAIO,GAAJ,CAArB,CAAJ,CAAoC,CAClC,MAAO,KAAP,CACD,CACF,CACD,IAAK,GAAIC,OAAT,GAAmBR,IAAnB,CAAwB,CAGtB,GAAID,IAAIS,MAAJ,IAAgBC,SAAhB,EAA6BT,IAAIQ,MAAJ,IAAgBC,SAAjD,CAA4D,CAC1D,MAAO,KAAP,CACD,CACF,CACF,CACD,MAAO,MAAP,CACD,CA/CD,CAiDAC,OAAOC,OAAP,CAAiBb,UAAjB","file":"deepDiffer.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule deepDiffer\n * @flow\n */\n'use strict';\n\n/*\n * @returns {bool} true if different, false if equal\n */\nvar deepDiffer = function(one: any, two: any): bool {\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if ((typeof one === 'function') && (typeof two === 'function')) {\n    // We consider all functions equal\n    return false;\n  }\n  if ((typeof one !== 'object') || (one === null)) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if ((typeof two !== 'object') || (two === null)) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    var len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (var ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii])) {\n        return true;\n      }\n    }\n  } else {\n    for (var key in one) {\n      if (deepDiffer(one[key], two[key])) {\n        return true;\n      }\n    }\n    for (var twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nmodule.exports = deepDiffer;\n"]}