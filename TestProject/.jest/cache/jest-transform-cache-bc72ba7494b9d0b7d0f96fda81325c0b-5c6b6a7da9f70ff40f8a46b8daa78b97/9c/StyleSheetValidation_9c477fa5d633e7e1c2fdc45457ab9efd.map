{"version":3,"sources":["StyleSheetValidation.js"],"names":["ImageStylePropTypes","require","TextStylePropTypes","ViewStylePropTypes","invariant","ReactPropTypesSecret","StyleSheetValidation","prop","style","caller","__DEV__","allStylePropTypes","undefined","message1","message2","JSON","stringify","Object","keys","sort","styleError","error","message","name","styles","validateStyleProp","stylePropTypes","key","addValidStylePropTypes","module","exports"],"mappings":"AASA,a,+oBAEA,GAAIA,qBAAsBC,OAAtB,uBAAJ,CACA,GAAIC,oBAAqBD,OAArB,sBAAJ,CACA,GAAIE,oBAAqBF,OAArB,sBAAJ,CAEA,GAAIG,WAAYH,OAAZ,sBAAJ,CAMA,GAAMI,sBAAuB,8CAA7B,C,GAEMC,qB,0LACqBC,I,CAAcC,K,CAAeC,M,CAAgB,CACpE,GAAI,CAACC,OAAL,CAAc,CACZ,OACD,CACD,GAAIC,kBAAkBJ,IAAlB,IAA4BK,SAAhC,CAA2C,CACzC,GAAIC,UAAW,IAAMN,IAAN,CAAa,kCAA5B,CACA,GAAIO,UAAW,wBACbC,KAAKC,SAAL,CAAeC,OAAOC,IAAP,CAAYP,iBAAZ,EAA+BQ,IAA/B,EAAf,CAAsD,IAAtD,CAA4D,IAA5D,CADF,CAEAC,WAAWP,QAAX,CAAqBL,KAArB,CAA4BC,MAA5B,CAAoCK,QAApC,EACD,CACD,GAAIO,OAAQV,kBAAkBJ,IAAlB,EACVC,KADU,CAEVD,IAFU,CAGVE,MAHU,CAIV,MAJU,CAKV,IALU,CAMVJ,oBANU,CAAZ,CAQA,GAAIgB,KAAJ,CAAW,CACTD,WAAWC,MAAMC,OAAjB,CAA0Bd,KAA1B,CAAiCC,MAAjC,EACD,CACF,C,oDAEoBc,I,CAAcC,M,CAAgB,CACjD,GAAI,CAACd,OAAL,CAAc,CACZ,OACD,CACD,IAAK,GAAIH,KAAT,GAAiBiB,QAAOD,IAAP,CAAjB,CAA+B,CAC7BjB,qBAAqBmB,iBAArB,CAAuClB,IAAvC,CAA6CiB,OAAOD,IAAP,CAA7C,CAA2D,cAAgBA,IAA3E,EACD,CACF,C,sEAE6BG,c,CAAgB,CAC5C,IAAK,GAAIC,IAAT,GAAgBD,eAAhB,CAAgC,CAC9Bf,kBAAkBgB,GAAlB,EAAyBD,eAAeC,GAAf,CAAzB,CACD,CACF,C,oCAGH,GAAIP,YAAa,QAAbA,WAAa,CAASP,QAAT,CAAmBL,KAAnB,CAA0BC,MAA1B,CAAmCK,QAAnC,CAA8C,CAC7DV,UACE,KADF,CAEES,SAAW,IAAX,EAAmBJ,QAAU,aAA7B,EAA8C,IAA9C,CACAM,KAAKC,SAAL,CAAeR,KAAf,CAAsB,IAAtB,CAA4B,IAA5B,CADA,EACqCM,UAAY,EADjD,CAFF,EAKD,CAND,CAQA,GAAIH,mBAAoB,EAAxB,CAEAL,qBAAqBsB,sBAArB,CAA4C5B,mBAA5C,EACAM,qBAAqBsB,sBAArB,CAA4C1B,kBAA5C,EACAI,qBAAqBsB,sBAArB,CAA4CzB,kBAA5C,EAEA0B,OAAOC,OAAP,CAAiBxB,oBAAjB","file":"StyleSheetValidation.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule StyleSheetValidation\n * @flow\n */\n'use strict';\n\nvar ImageStylePropTypes = require('ImageStylePropTypes');\nvar TextStylePropTypes = require('TextStylePropTypes');\nvar ViewStylePropTypes = require('ViewStylePropTypes');\n\nvar invariant = require('fbjs/lib/invariant');\n\n// Hardcoded because this is a legit case but we don't want to load it from\n// a private API. We might likely want to unify style sheet creation with how it\n// is done in the DOM so this might move into React. I know what I'm doing so\n// plz don't fire me.\nconst ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nclass StyleSheetValidation {\n  static validateStyleProp(prop: string, style: Object, caller: string) {\n    if (!__DEV__) {\n      return;\n    }\n    if (allStylePropTypes[prop] === undefined) {\n      var message1 = '\"' + prop + '\" is not a valid style property.';\n      var message2 = '\\nValid style props: ' +\n        JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');\n      styleError(message1, style, caller, message2);\n    }\n    var error = allStylePropTypes[prop](\n      style,\n      prop,\n      caller,\n      'prop',\n      null,\n      ReactPropTypesSecret,\n    );\n    if (error) {\n      styleError(error.message, style, caller);\n    }\n  }\n\n  static validateStyle(name: string, styles: Object) {\n    if (!__DEV__) {\n      return;\n    }\n    for (var prop in styles[name]) {\n      StyleSheetValidation.validateStyleProp(prop, styles[name], 'StyleSheet ' + name);\n    }\n  }\n\n  static addValidStylePropTypes(stylePropTypes) {\n    for (var key in stylePropTypes) {\n      allStylePropTypes[key] = stylePropTypes[key];\n    }\n  }\n}\n\nvar styleError = function(message1, style, caller?, message2?) {\n  invariant(\n    false,\n    message1 + '\\n' + (caller || '<<unknown>>') + ': ' +\n    JSON.stringify(style, null, '  ') + (message2 || '')\n  );\n};\n\nvar allStylePropTypes = {};\n\nStyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);\nStyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);\nStyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);\n\nmodule.exports = StyleSheetValidation;\n"]}