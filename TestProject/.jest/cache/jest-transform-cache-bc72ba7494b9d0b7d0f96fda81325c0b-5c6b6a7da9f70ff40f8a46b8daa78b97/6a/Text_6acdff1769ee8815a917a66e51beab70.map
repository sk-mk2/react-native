{"version":3,"sources":["Text.js"],"names":["NativeMethodsMixin","require","React","ReactNativeViewAttributes","TextPropTypes","Touchable","UIManager","createReactClass","createReactNativeComponentClass","mergeFast","processColor","ViewContextTypes","viewConfig","validAttributes","UIView","isHighlighted","numberOfLines","ellipsizeMode","allowFontScaling","disabled","selectable","selectionColor","adjustsFontSizeToFit","minimumFontScale","textBreakStrategy","uiViewClassName","Text","displayName","propTypes","getDefaultProps","accessible","getInitialState","Mixin","touchableGetInitialState","mixins","getChildContext","isInAParentText","childContextTypes","contextTypes","_handlers","_hasPressHandler","props","onPress","onLongPress","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandlePress","touchableHandleLongPress","touchableGetPressRectOffset","render","newProps","onStartShouldSetResponder","shouldSetFromProps","setResponder","key","bind","suppressHighlighting","setState","e","pressRetentionOffset","PRESS_RECT_OFFSET","onResponderGrant","dispatchID","touchableHandleResponderGrant","apply","arguments","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","onResponderTerminationRequest","allowTermination","touchableHandleResponderTerminationRequest","state","TOUCH_TARGET_DEBUG","style","color","context","top","left","right","bottom","RCTText","RCTVirtualText","module","exports"],"mappings":"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","file":"Text.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule Text\n * @flow\n * @format\n */\n'use strict';\n\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst React = require('React');\nconst ReactNativeViewAttributes = require('ReactNativeViewAttributes');\nconst TextPropTypes = require('TextPropTypes');\nconst Touchable = require('Touchable');\nconst UIManager = require('UIManager');\n\nconst createReactClass = require('create-react-class');\nconst createReactNativeComponentClass = require('createReactNativeComponentClass');\nconst mergeFast = require('mergeFast');\nconst processColor = require('processColor');\nconst {ViewContextTypes} = require('ViewContext');\n\nconst viewConfig = {\n  validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {\n    isHighlighted: true,\n    numberOfLines: true,\n    ellipsizeMode: true,\n    allowFontScaling: true,\n    disabled: true,\n    selectable: true,\n    selectionColor: true,\n    adjustsFontSizeToFit: true,\n    minimumFontScale: true,\n    textBreakStrategy: true,\n  }),\n  uiViewClassName: 'RCTText',\n};\n\nimport type {ViewChildContext} from 'ViewContext';\n\n/**\n * A React component for displaying text.\n *\n * See https://facebook.github.io/react-native/docs/text.html\n */\n\nconst Text = createReactClass({\n  displayName: 'Text',\n  propTypes: TextPropTypes,\n  getDefaultProps(): Object {\n    return {\n      accessible: true,\n      allowFontScaling: true,\n      ellipsizeMode: 'tail',\n    };\n  },\n  getInitialState: function(): Object {\n    return mergeFast(Touchable.Mixin.touchableGetInitialState(), {\n      isHighlighted: false,\n    });\n  },\n  mixins: [NativeMethodsMixin],\n  viewConfig: viewConfig,\n  getChildContext(): ViewChildContext {\n    return {\n      isInAParentText: true,\n    };\n  },\n  childContextTypes: ViewContextTypes,\n  contextTypes: ViewContextTypes,\n  /**\n   * Only assigned if touch is needed.\n   */\n  _handlers: (null: ?Object),\n  _hasPressHandler(): boolean {\n    return !!this.props.onPress || !!this.props.onLongPress;\n  },\n  /**\n   * These are assigned lazily the first time the responder is set to make plain\n   * text nodes as cheap as possible.\n   */\n  touchableHandleActivePressIn: (null: ?Function),\n  touchableHandleActivePressOut: (null: ?Function),\n  touchableHandlePress: (null: ?Function),\n  touchableHandleLongPress: (null: ?Function),\n  touchableGetPressRectOffset: (null: ?Function),\n  render(): React.Element<any> {\n    let newProps = this.props;\n    if (this.props.onStartShouldSetResponder || this._hasPressHandler()) {\n      if (!this._handlers) {\n        this._handlers = {\n          onStartShouldSetResponder: (): boolean => {\n            const shouldSetFromProps =\n              this.props.onStartShouldSetResponder &&\n              // $FlowFixMe(>=0.41.0)\n              this.props.onStartShouldSetResponder();\n            const setResponder = shouldSetFromProps || this._hasPressHandler();\n            if (setResponder && !this.touchableHandleActivePressIn) {\n              // Attach and bind all the other handlers only the first time a touch\n              // actually happens.\n              for (const key in Touchable.Mixin) {\n                if (typeof Touchable.Mixin[key] === 'function') {\n                  (this: any)[key] = Touchable.Mixin[key].bind(this);\n                }\n              }\n              this.touchableHandleActivePressIn = () => {\n                if (\n                  this.props.suppressHighlighting ||\n                  !this._hasPressHandler()\n                ) {\n                  return;\n                }\n                this.setState({\n                  isHighlighted: true,\n                });\n              };\n\n              this.touchableHandleActivePressOut = () => {\n                if (\n                  this.props.suppressHighlighting ||\n                  !this._hasPressHandler()\n                ) {\n                  return;\n                }\n                this.setState({\n                  isHighlighted: false,\n                });\n              };\n\n              this.touchableHandlePress = (e: SyntheticEvent<>) => {\n                this.props.onPress && this.props.onPress(e);\n              };\n\n              this.touchableHandleLongPress = (e: SyntheticEvent<>) => {\n                this.props.onLongPress && this.props.onLongPress(e);\n              };\n\n              this.touchableGetPressRectOffset = function(): RectOffset {\n                return this.props.pressRetentionOffset || PRESS_RECT_OFFSET;\n              };\n            }\n            return setResponder;\n          },\n          onResponderGrant: function(e: SyntheticEvent<>, dispatchID: string) {\n            this.touchableHandleResponderGrant(e, dispatchID);\n            this.props.onResponderGrant &&\n              this.props.onResponderGrant.apply(this, arguments);\n          }.bind(this),\n          onResponderMove: function(e: SyntheticEvent<>) {\n            this.touchableHandleResponderMove(e);\n            this.props.onResponderMove &&\n              this.props.onResponderMove.apply(this, arguments);\n          }.bind(this),\n          onResponderRelease: function(e: SyntheticEvent<>) {\n            this.touchableHandleResponderRelease(e);\n            this.props.onResponderRelease &&\n              this.props.onResponderRelease.apply(this, arguments);\n          }.bind(this),\n          onResponderTerminate: function(e: SyntheticEvent<>) {\n            this.touchableHandleResponderTerminate(e);\n            this.props.onResponderTerminate &&\n              this.props.onResponderTerminate.apply(this, arguments);\n          }.bind(this),\n          onResponderTerminationRequest: function(): boolean {\n            // Allow touchable or props.onResponderTerminationRequest to deny\n            // the request\n            var allowTermination = this.touchableHandleResponderTerminationRequest();\n            if (allowTermination && this.props.onResponderTerminationRequest) {\n              allowTermination = this.props.onResponderTerminationRequest.apply(\n                this,\n                arguments,\n              );\n            }\n            return allowTermination;\n          }.bind(this),\n        };\n      }\n      newProps = {\n        ...this.props,\n        ...this._handlers,\n        isHighlighted: this.state.isHighlighted,\n      };\n    }\n    if (newProps.selectionColor != null) {\n      newProps = {\n        ...newProps,\n        selectionColor: processColor(newProps.selectionColor),\n      };\n    }\n    if (Touchable.TOUCH_TARGET_DEBUG && newProps.onPress) {\n      newProps = {\n        ...newProps,\n        style: [this.props.style, {color: 'magenta'}],\n      };\n    }\n    if (this.context.isInAParentText) {\n      return <RCTVirtualText {...newProps} />;\n    } else {\n      return <RCTText {...newProps} />;\n    }\n  },\n});\n\ntype RectOffset = {\n  top: number,\n  left: number,\n  right: number,\n  bottom: number,\n};\n\nvar PRESS_RECT_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\nvar RCTText = createReactNativeComponentClass(\n  viewConfig.uiViewClassName,\n  () => viewConfig,\n);\nvar RCTVirtualText = RCTText;\n\nif (UIManager.RCTVirtualText) {\n  RCTVirtualText = createReactNativeComponentClass('RCTVirtualText', () => ({\n    validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {\n      isHighlighted: true,\n    }),\n    uiViewClassName: 'RCTVirtualText',\n  }));\n}\n\nmodule.exports = Text;\n"]}