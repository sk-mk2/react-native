{"version":3,"sources":["TVEventHandler.js"],"names":["Platform","require","TVNavigationEventEmitter","NativeEventEmitter","TVEventHandler","__nativeTVNavigationEventListener","__nativeTVNavigationEventEmitter","prototype","enable","component","callback","OS","addListener","data","disable","remove","module","exports"],"mappings":"AASA,aAEA,GAAMA,UAAWC,OAAX,YAAN,CACA,GAAMC,0BAA2BD,yBAAyBC,wBAA1D,CACA,GAAMC,oBAAqBF,OAArB,sBAAN,CAEA,QAASG,eAAT,EAA0B,CACxB,KAAKC,iCAAL,CAAyC,IAAzC,CACA,KAAKC,gCAAL,CAAwC,IAAxC,CACD,CAEDF,eAAeG,SAAf,CAAyBC,MAAzB,CAAkC,SAASC,SAAT,CAA0BC,QAA1B,CAA8C,CAC9E,GAAIV,SAASW,EAAT,GAAgB,KAAhB,EAAyB,CAACT,wBAA9B,CAAwD,CACtD,OACD,CAED,KAAKI,gCAAL,CAAwC,GAAIH,mBAAJ,CAAuBD,wBAAvB,CAAxC,CACA,KAAKG,iCAAL,CAAyC,KAAKC,gCAAL,CAAsCM,WAAtC,CACvC,cADuC,CAEvC,SAACC,IAAD,CAAU,CACR,GAAIH,QAAJ,CAAc,CACZA,SAASD,SAAT,CAAoBI,IAApB,EACD,CACF,CANsC,CAAzC,CAQD,CAdD,CAgBAT,eAAeG,SAAf,CAAyBO,OAAzB,CAAmC,UAAW,CAC5C,GAAI,KAAKT,iCAAT,CAA4C,CAC1C,KAAKA,iCAAL,CAAuCU,MAAvC,GACA,MAAO,MAAKV,iCAAZ,CACD,CACD,GAAI,KAAKC,gCAAT,CAA2C,CACzC,MAAO,MAAKA,gCAAZ,CACD,CACF,CARD,CAUAU,OAAOC,OAAP,CAAiBb,cAAjB","file":"TVEventHandler.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule TVEventHandler\n * @flow\n */\n'use strict';\n\nconst Platform = require('Platform');\nconst TVNavigationEventEmitter = require('NativeModules').TVNavigationEventEmitter;\nconst NativeEventEmitter = require('NativeEventEmitter');\n\nfunction TVEventHandler() {\n  this.__nativeTVNavigationEventListener = null;\n  this.__nativeTVNavigationEventEmitter = null;\n}\n\nTVEventHandler.prototype.enable = function(component: ?any, callback: Function) {\n  if (Platform.OS === 'ios' && !TVNavigationEventEmitter) {\n    return;\n  }\n\n  this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(TVNavigationEventEmitter);\n  this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener(\n    'onHWKeyEvent',\n    (data) => {\n      if (callback) {\n        callback(component, data);\n      }\n    }\n  );\n};\n\nTVEventHandler.prototype.disable = function() {\n  if (this.__nativeTVNavigationEventListener) {\n    this.__nativeTVNavigationEventListener.remove();\n    delete this.__nativeTVNavigationEventListener;\n  }\n  if (this.__nativeTVNavigationEventEmitter) {\n    delete this.__nativeTVNavigationEventEmitter;\n  }\n};\n\nmodule.exports = TVEventHandler;\n"]}