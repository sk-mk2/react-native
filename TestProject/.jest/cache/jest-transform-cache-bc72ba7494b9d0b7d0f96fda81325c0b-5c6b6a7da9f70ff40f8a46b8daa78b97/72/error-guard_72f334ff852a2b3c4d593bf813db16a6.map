{"version":3,"sources":["error-guard.js"],"names":["_inGuard","_globalHandler","onError","e","ErrorUtils","setGlobalHandler","fun","getGlobalHandler","reportError","error","reportFatalError","applyWithGuard","context","args","apply","applyWithGuardIfNeeded","inGuard","guard","name","console","warn","guarded","arguments","global"],"mappings":"AAWA,GAAIA,UAAW,CAAf,CAOA,GAAIC,gBAAiB,QAASC,QAAT,CAAiBC,CAAjB,CAAoB,CACvC,KAAMA,EAAN,CACD,CAFD,CAYA,GAAMC,YAAa,CACjBC,gBADiB,2BACAC,GADA,CACK,CACpBL,eAAiBK,GAAjB,CACD,CAHgB,CAIjBC,gBAJiB,4BAIE,CACjB,MAAON,eAAP,CACD,CANgB,CAOjBO,WAPiB,sBAOLC,KAPK,CAOE,CACjBR,gBAAkBA,eAAeQ,KAAf,CAAlB,CACD,CATgB,CAUjBC,gBAViB,2BAUAD,KAVA,CAUO,CACtBR,gBAAkBA,eAAeQ,KAAf,CAAsB,IAAtB,CAAlB,CACD,CAZgB,CAajBE,cAbiB,yBAaFL,GAbE,CAaGM,OAbH,CAaYC,IAbZ,CAakB,CACjC,GAAI,CACFb,WACA,MAAOM,KAAIQ,KAAJ,CAAUF,OAAV,CAAmBC,IAAnB,CAAP,CACD,CAAC,MAAOV,CAAP,CAAU,CACVC,WAAWI,WAAX,CAAuBL,CAAvB,EACD,CALD,OAKU,CACRH,WACD,CACD,MAAO,KAAP,CACD,CAvBgB,CAwBjBe,sBAxBiB,iCAwBMT,GAxBN,CAwBWM,OAxBX,CAwBoBC,IAxBpB,CAwB0B,CACzC,GAAIT,WAAWY,OAAX,EAAJ,CAA0B,CACxB,MAAOV,KAAIQ,KAAJ,CAAUF,OAAV,CAAmBC,IAAnB,CAAP,CACD,CAFD,IAEO,CACLT,WAAWO,cAAX,CAA0BL,GAA1B,CAA+BM,OAA/B,CAAwCC,IAAxC,EACD,CACD,MAAO,KAAP,CACD,CA/BgB,CAgCjBG,OAhCiB,mBAgCP,CACR,MAAOhB,SAAP,CACD,CAlCgB,CAmCjBiB,KAnCiB,gBAmCXX,GAnCW,CAmCNY,IAnCM,CAmCAN,OAnCA,CAmCS,CACxB,GAAI,MAAON,IAAP,GAAe,UAAnB,CAA+B,CAC7Ba,QAAQC,IAAR,CAAa,qDAAb,CAAoEd,GAApE,EACA,MAAO,KAAP,CACD,CACDY,KAAOA,MAAQZ,IAAIY,IAAZ,EAAoB,mBAA3B,CACA,QAASG,QAAT,EAAmB,CACjB,MACEjB,YAAWO,cAAX,CACEL,GADF,CAEEM,SAAW,IAFb,CAGEU,SAHF,CAIE,IAJF,CAKEJ,IALF,CADF,CASD,CAED,MAAOG,QAAP,CACD,CAtDgB,CAAnB,CAyDAE,OAAOnB,UAAP,CAAoBA,UAApB","file":"error-guard.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule error-guard\n * @polyfill\n * @nolint\n */\n\nlet _inGuard = 0;\n\n/**\n * This is the error handler that is called when we encounter an exception\n * when loading a module. This will report any errors encountered before\n * ExceptionsManager is configured.\n */\nlet _globalHandler = function onError(e) {\n  throw e;\n};\n\n/**\n * The particular require runtime that we are using looks for a global\n * `ErrorUtils` object and if it exists, then it requires modules with the\n * error handler specified via ErrorUtils.setGlobalHandler by calling the\n * require function with applyWithGuard. Since the require module is loaded\n * before any of the modules, this ErrorUtils must be defined (and the handler\n * set) globally before requiring anything.\n */\nconst ErrorUtils = {\n  setGlobalHandler(fun) {\n    _globalHandler = fun;\n  },\n  getGlobalHandler() {\n    return _globalHandler;\n  },\n  reportError(error) {\n    _globalHandler && _globalHandler(error);\n  },\n  reportFatalError(error) {\n    _globalHandler && _globalHandler(error, true);\n  },\n  applyWithGuard(fun, context, args) {\n    try {\n      _inGuard++;\n      return fun.apply(context, args);\n    } catch (e) {\n      ErrorUtils.reportError(e);\n    } finally {\n      _inGuard--;\n    }\n    return null;\n  },\n  applyWithGuardIfNeeded(fun, context, args) {\n    if (ErrorUtils.inGuard()) {\n      return fun.apply(context, args);\n    } else {\n      ErrorUtils.applyWithGuard(fun, context, args);\n    }\n    return null;\n  },\n  inGuard() {\n    return _inGuard;\n  },\n  guard(fun, name, context) {\n    if (typeof fun !== 'function') {\n      console.warn('A function must be passed to ErrorUtils.guard, got ', fun);\n      return null;\n    }\n    name = name || fun.name || '<generated guard>';\n    function guarded() {\n      return (\n        ErrorUtils.applyWithGuard(\n          fun,\n          context || this,\n          arguments,\n          null,\n          name\n        )\n      );\n    }\n\n    return guarded;\n  },\n};\n\nglobal.ErrorUtils = ErrorUtils;\n"]}