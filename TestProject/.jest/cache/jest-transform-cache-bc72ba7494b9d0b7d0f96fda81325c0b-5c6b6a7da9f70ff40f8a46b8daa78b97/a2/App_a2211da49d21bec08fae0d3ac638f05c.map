{"version":3,"sources":["App.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//これらはそれぞれreact-nativeが提供しているコンポーネント\nimport { TouchableOpacity , FlatList, View} from 'react-native';\n//native-base\n//UI用フレームワークbootstrap的な\nimport {\n    Container,\n    Header,\n    Title,\n    Content,\n    Footer,\n    Button,\n    Left,\n    Right,\n    Body,\n    Icon,\n    List,\n    ListItem,\n    H2,\n    Text\n} from 'native-base';\nimport Nelu from './components/Nelu';\nimport Random from './components/Random.js';\nimport { createStackNavigator } from 'react-navigation';\nimport Style from './components/Style';\n\n//名前付きexportはimportする際その名前でしかimportできない\n//default export は好きな名前でimportできる\nconst componentsList = [\n    { key: 'Nelu' ,\n      title: 'ねる画像'},\n    { key: 'Random' ,\n      title: '乱数取得アプリ'},\n];\n\nclass Lists extends Component{\n    render() {\n        return (\n            <Container>\n                <Header>\n                <Body>\n                <H2>\n                    React-Native Tutrial\n                </H2>\n                </Body>\n                </Header>\n\n              <Content>  \n                <List\n                    dataArray ={componentsList}\n                    renderRow={(item) => (\n                        <ListItem>\n                        <Left>\n                                <TouchableOpacity\n                                    onPress={() => this.props.navigation.navigate(item.key)}\n                                >\n                                    <Text style={Style.textUp}>\n                                        {item.title}\n                                    </Text>\n                                </TouchableOpacity>\n                            </Left>\n                            <Right>\n                                <TouchableOpacity\n                                    onPress={() => this.props.navigation.navigate(item.key)}\n                                >\n                                    <Icon type='Entypo' name='chevron-right' />\n                                </TouchableOpacity>\n                                </Right>\n                        </ListItem>\n                    )}\n                >\n                </List>\n                </Content>\n            </Container>\n        );\n    }\n}\n\nconst RootStack = createStackNavigator({\n    Nelu: {\n        screen: Nelu,\n    },\n    Lists: {\n        screen: Lists\n    },\n    Random: {\n        screen: Random\n    },\n}, {\n    initialRouteName: 'Lists'\n});\n\n//他にも各種ボタン、リスト表示とか用のコンポーネントもある\n//httpRequestはfetchAPIを使うのが一般的？axiosとかでも\n//react-native自体にその機能はないっぽい\n//WebSocketも使える,これもwebAPI使ってアクセスするっぽい\n//react-navigatorというので画面遷移は簡単にできる\n\nexport default class App extends Component {\n    render() {\n        return (\n            <RootStack />\n        );\n    }\n}\n"],"sourceRoot":""}