{"version":3,"sources":["PooledClass.js"],"names":["invariant","require","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","length","instance","pop","call","twoArgumentPooler","a1","a2","threeArgumentPooler","a3","fourArgumentPooler","a4","standardReleaser","destructor","poolSize","push","DEFAULT_POOL_SIZE","DEFAULT_POOLER","addPoolingTo","CopyConstructor","pooler","NewKlass","getPooled","release","PooledClass","module","exports"],"mappings":"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","file":"PooledClass.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule PooledClass\n * @flow\n */\n\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nconst oneArgumentPooler = function(copyFieldsFrom) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nconst twoArgumentPooler = function(a1, a2) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nconst threeArgumentPooler = function(a1, a2, a3) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nconst fourArgumentPooler = function(a1, a2, a3, a4) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nconst standardReleaser = function(instance) {\n  const Klass = this;\n  invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.',\n  );\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nconst DEFAULT_POOL_SIZE = 10;\nconst DEFAULT_POOLER = oneArgumentPooler;\n\ntype Pooler = any;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nconst addPoolingTo = function<T>(\n  CopyConstructor: Class<T>,\n  pooler: Pooler,\n): Class<T> & {\n  getPooled(\n    ...args: $ReadOnlyArray<mixed>\n  ): /* arguments of the constructor */ T,\n  release(instance: mixed): void,\n} {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  const NewKlass = (CopyConstructor: any);\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nconst PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: (oneArgumentPooler: Pooler),\n  twoArgumentPooler: (twoArgumentPooler: Pooler),\n  threeArgumentPooler: (threeArgumentPooler: Pooler),\n  fourArgumentPooler: (fourArgumentPooler: Pooler),\n};\n\nmodule.exports = PooledClass;\n"]}