{"version":3,"sources":["TransformPropTypes.js"],"names":["ReactPropTypes","require","deprecatedPropType","TransformMatrixPropType","props","propName","componentName","Error","DecomposedMatrixPropType","TransformPropTypes","transform","arrayOf","oneOfType","shape","perspective","number","rotate","string","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","translateX","translateY","skewX","skewY","transformMatrix","decomposedMatrix","rotation","module","exports"],"mappings":"AASA,aAEA,GAAIA,gBAAiBC,OAAjB,cAAJ,CAEA,GAAIC,oBAAqBD,OAArB,sBAAJ,CAEA,GAAIE,yBAA0B,QAA1BA,wBAA0B,CAC5BC,KAD4B,CAE5BC,QAF4B,CAG5BC,aAH4B,CAInB,CACT,GAAIF,MAAMC,QAAN,CAAJ,CAAqB,CACnB,MAAO,IAAIE,MAAJ,CACL,qDACA,6CAFK,CAAP,CAID,CACF,CAXD,CAaA,GAAIC,0BAA2B,QAA3BA,yBAA2B,CAC7BJ,KAD6B,CAE7BC,QAF6B,CAG7BC,aAH6B,CAIpB,CACT,GAAIF,MAAMC,QAAN,CAAJ,CAAqB,CACnB,MAAO,IAAIE,MAAJ,CACL,sDACA,iCAFK,CAAP,CAID,CACF,CAXD,CAaA,GAAIE,oBAAqB,CAiBvBC,UAAWV,eAAeW,OAAf,CACTX,eAAeY,SAAf,CAAyB,CACvBZ,eAAea,KAAf,CAAqB,CAACC,YAAad,eAAee,MAA7B,CAArB,CADuB,CAEvBf,eAAea,KAAf,CAAqB,CAACG,OAAQhB,eAAeiB,MAAxB,CAArB,CAFuB,CAGvBjB,eAAea,KAAf,CAAqB,CAACK,QAASlB,eAAeiB,MAAzB,CAArB,CAHuB,CAIvBjB,eAAea,KAAf,CAAqB,CAACM,QAASnB,eAAeiB,MAAzB,CAArB,CAJuB,CAKvBjB,eAAea,KAAf,CAAqB,CAACO,QAASpB,eAAeiB,MAAzB,CAArB,CALuB,CAMvBjB,eAAea,KAAf,CAAqB,CAACQ,MAAOrB,eAAee,MAAvB,CAArB,CANuB,CAOvBf,eAAea,KAAf,CAAqB,CAACS,OAAQtB,eAAee,MAAxB,CAArB,CAPuB,CAQvBf,eAAea,KAAf,CAAqB,CAACU,OAAQvB,eAAee,MAAxB,CAArB,CARuB,CASvBf,eAAea,KAAf,CAAqB,CAACW,WAAYxB,eAAee,MAA5B,CAArB,CATuB,CAUvBf,eAAea,KAAf,CAAqB,CAACY,WAAYzB,eAAee,MAA5B,CAArB,CAVuB,CAWvBf,eAAea,KAAf,CAAqB,CAACa,MAAO1B,eAAeiB,MAAvB,CAArB,CAXuB,CAYvBjB,eAAea,KAAf,CAAqB,CAACc,MAAO3B,eAAeiB,MAAvB,CAArB,CAZuB,CAAzB,CADS,CAjBY,CAqCvBW,gBAAiBzB,uBArCM,CAyCvB0B,iBAAkBrB,wBAzCK,CA4CvBc,OAAQpB,mBAAmBF,eAAee,MAAlC,CAA0C,iCAA1C,CA5Ce,CA6CvBQ,OAAQrB,mBAAmBF,eAAee,MAAlC,CAA0C,iCAA1C,CA7Ce,CA8CvBe,SAAU5B,mBAAmBF,eAAee,MAAlC,CAA0C,iCAA1C,CA9Ca,CA+CvBS,WAAYtB,mBAAmBF,eAAee,MAAlC,CAA0C,iCAA1C,CA/CW,CAgDvBU,WAAYvB,mBAAmBF,eAAee,MAAlC,CAA0C,iCAA1C,CAhDW,CAAzB,CAmDAgB,OAAOC,OAAP,CAAiBvB,kBAAjB","file":"TransformPropTypes.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule TransformPropTypes\n * @flow\n */\n'use strict';\n\nvar ReactPropTypes = require('prop-types');\n\nvar deprecatedPropType = require('deprecatedPropType');\n\nvar TransformMatrixPropType = function(\n  props : Object,\n  propName : string,\n  componentName : string\n) : ?Error {\n  if (props[propName]) {\n    return new Error(\n      'The transformMatrix style property is deprecated. ' +\n      'Use `transform: [{ matrix: ... }]` instead.'\n    );\n  }\n};\n\nvar DecomposedMatrixPropType = function(\n  props : Object,\n  propName : string,\n  componentName : string\n) : ?Error {\n  if (props[propName]) {\n    return new Error(\n      'The decomposedMatrix style property is deprecated. ' +\n      'Use `transform: [...]` instead.'\n    );\n  }\n};\n\nvar TransformPropTypes = {\n  /**\n   * `transform` accepts an array of transformation objects. Each object specifies\n   * the property that will be transformed as the key, and the value to use in the\n   * transformation. Objects should not be combined. Use a single key/value pair\n   * per object.\n   *\n   * The rotate transformations require a string so that the transform may be\n   * expressed in degrees (deg) or radians (rad). For example:\n   *\n   * `transform([{ rotateX: '45deg' }, { rotateZ: '0.785398rad' }])`\n   *\n   * The skew transformations require a string so that the transform may be\n   * expressed in degrees (deg). For example:\n   *\n   * `transform([{ skewX: '45deg' }])`\n   */\n  transform: ReactPropTypes.arrayOf(\n    ReactPropTypes.oneOfType([\n      ReactPropTypes.shape({perspective: ReactPropTypes.number}),\n      ReactPropTypes.shape({rotate: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateX: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateY: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateZ: ReactPropTypes.string}),\n      ReactPropTypes.shape({scale: ReactPropTypes.number}),\n      ReactPropTypes.shape({scaleX: ReactPropTypes.number}),\n      ReactPropTypes.shape({scaleY: ReactPropTypes.number}),\n      ReactPropTypes.shape({translateX: ReactPropTypes.number}),\n      ReactPropTypes.shape({translateY: ReactPropTypes.number}),\n      ReactPropTypes.shape({skewX: ReactPropTypes.string}),\n      ReactPropTypes.shape({skewY: ReactPropTypes.string})\n    ])\n  ),\n\n  /**\n   * Deprecated. Use the transform prop instead.\n   */\n  transformMatrix: TransformMatrixPropType,\n  /**\n   * Deprecated. Use the transform prop instead.\n   */\n  decomposedMatrix: DecomposedMatrixPropType,\n\n  /* Deprecated transform props used on Android only */\n  scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n};\n\nmodule.exports = TransformPropTypes;\n"]}